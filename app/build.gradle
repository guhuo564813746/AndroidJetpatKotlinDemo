plugins {
    id 'com.android.application'
    id 'kotlin-android'
//    id 'androidx.navigation.safeargs.kotlin'
//    id 'com.apollographql.android'
    id 'com.apollographql.apollo'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs"
}

def buildDaniuJniLibs(){
    return "daniuLicenseJniLibs"
//    return "disneyDaniuLicenseJniLibs"
}

android {
    compileSdkVersion 30
    buildFeatures {
        dataBinding = true
    }

    kapt {
        generateStubs = true
    }

    signingConfigs {
        release {
            storeFile file('D:\\AndroidXMZZPj\\WawaAndroidEpPj\\wawaRobot\\RobotEpPj\\keystore\\robotwarapp.keystore')
            storePassword "robot@0304"
            keyAlias "robotwarapp"
            keyPassword "robot@0304"
        }
    }

    defaultConfig {
        applicationId "com.robotwar.app"
//        applicationId "com.wowgotcha.wawa"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "v1.0.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BaseURL",'"https://app.robotwar.cc/api/v1/"'
        buildConfigField "String", "HOST", '"https://app.robotwar.cc"'
        buildConfigField "String", "WX_APPID", '"wxd0c6dbd5e99c284c"' //wawa: wx0c0bd85e2edb9f75  robot: wxcba967814b417cb3
        buildConfigField "String", "WX_SECREAT", '"14f0800449710f7f5f4445de9a5ddbd0"'

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
//            abiFilters 'arm64-v8a'//,'x86'
//            abiFilters 'armeabi-v7a','x86'
        }
    }

    buildTypes {
        debug {
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        release {
            zipAlignEnabled true
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets{
        main{
            jniLibs.srcDirs = ['daniuLicenseJniLibs']
//            jniLibs.srcDirs = ['disneyDaniuLicenseJniLibs']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions{
//        exclude 'classes.dex'
//        exclude '**.**'

        doNotStrip "*/armeabi-v7a/*.so"
        doNotStrip "*/x86/*.so"
        doNotStrip "*/arm64-v8a/*.so"
        doNotStrip "*/x86_64/*.so"
        doNotStrip "armeabi.so"
    }
}

repositories {
    flatDir {
        dirs 'libs' ,'../BaseLib/libs'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //版本要与gradle版本一致
    kapt  "com.android.databinding:compiler:4.1.1"

    //添加lombok 插件依赖
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    implementation 'androidx.multidex:multidex:2.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    api project(path: ':BaseLib')
    implementation project(path: ':magicindicator')
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

//    api project(':baseresourcelib')
    //直播视频库
    api files(buildDaniuJniLibs() + '/smartavengine.jar')
}